@model BilliardsManagement.Models.ViewModels.PermissionManagementViewModel
@{
    ViewData["Title"] = "Quản lý phân quyền";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex align-items-center">
            <a asp-controller="Manager" asp-action="BackToDashboard" class="btn btn-outline-secondary me-3">
                <i class="bi bi-arrow-left me-1"></i>Quay lại
            </a>
            <div>
                <h2 class="mb-0">
                    <i class="bi bi-shield-check text-primary me-2"></i>Quản lý phân quyền
                </h2>
                <p class="text-muted mb-0">Cấp và thu hồi quyền truy cập cho nhân viên</p>
            </div>
        </div>
        <div>
            <button class="btn btn-success me-2" onclick="showBatchPermissionModal()">
                <i class="bi bi-people me-1"></i>Phân quyền nhóm
            </button>
            <button class="btn btn-info" onclick="initializePermissions()">
                <i class="bi bi-gear me-1"></i>Khởi tạo quyền
            </button>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Tổng nhân viên</h6>
                            <h3>@Model.Employees.Count()</h3>
                        </div>
                        <i class="bi bi-people fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Thu ngân</h6>
                            <h3>@Model.Employees.Count(e => e.Position == "CASHIER")</h3>
                        </div>
                        <i class="bi bi-cash-stack fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Phục vụ</h6>
                            <h3>@Model.Employees.Count(e => e.Position == "SERVING")</h3>
                        </div>
                        <i class="bi bi-person-badge fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h6 class="card-title">Tổng quyền</h6>
                            <h3>@Model.Permissions.Count()</h3>
                        </div>
                        <i class="bi bi-shield-check fs-1 opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabs -->
    <ul class="nav nav-tabs" id="permissionTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="employees-tab" data-bs-toggle="tab" data-bs-target="#employees-content" type="button" role="tab">
                <i class="bi bi-people me-2"></i>Nhân viên và Quyền
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="permissions-tab" data-bs-toggle="tab" data-bs-target="#permissions-content" type="button" role="tab">
                <i class="bi bi-list-check me-2"></i>Danh sách Quyền
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="templates-tab" data-bs-toggle="tab" data-bs-target="#templates-content" type="button" role="tab">
                <i class="bi bi-bookmark me-2"></i>Mẫu Phân Quyền
            </button>
        </li>
    </ul>

    <div class="tab-content" id="permissionTabContent">
        <!-- Employees and Permissions Tab -->
        <div class="tab-pane fade show active" id="employees-content" role="tabpanel">
            <div class="card mt-3">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Danh sách nhân viên và quyền</h5>
                        <div class="input-group" style="width: 300px;">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" class="form-control" id="employeeSearch" placeholder="Tìm kiếm nhân viên...">
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="employeeTable">
                            <thead class="table-light">
                                <tr>
                                    <th>
                                        <input type="checkbox" class="form-check-input" id="selectAllEmployees">
                                        Nhân viên
                                    </th>
                                    <th>Chức vụ</th>
                                    <th>Quyền đã cấp</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var employee in Model.Employees)
                                {
                                    var employeePermissions = Model.EmployeePermissions
                                        .Where(ep => ep.EmployeeId == employee.EmployeeId)
                                        .ToList();

                                    var positionClass = employee.Position switch
                                    {
                                        "CASHIER" => "badge bg-success",
                                        "SERVING" => "badge bg-warning",
                                        _ => "badge bg-secondary"
                                    };

                                    var positionText = employee.Position switch
                                    {
                                        "CASHIER" => "Thu ngân",
                                        "SERVING" => "Phục vụ",
                                        _ => employee.Position
                                    };

                                    <tr data-employee-id="@employee.EmployeeId" data-employee-name="@employee.FullName">
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <input type="checkbox" class="form-check-input employee-checkbox me-2" value="@employee.EmployeeId">
                                                <div>
                                                    <strong>@employee.FullName</strong><br>
                                                    <small class="text-muted">ID: @employee.EmployeeId | @employee.Username</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="@positionClass">@positionText</span>
                                        </td>
                                        <td>
                                            @if (employeePermissions.Any())
                                            {
                                                var groupedPermissions = employeePermissions
                                                    .GroupBy(ep => ep.Category)
                                                    .ToDictionary(g => g.Key, g => g.ToList());

                                                <div class="permission-badges">
                                                    @foreach (var category in groupedPermissions)
                                                    {
                                                        var badgeClass = category.Key switch
                                                        {
                                                            "Quản lý bàn" => "bg-primary",
                                                            "Quản lý sản phẩm" => "bg-warning",
                                                            "Đặt bàn" => "bg-info",
                                                            "Phiên chơi" => "bg-success",
                                                            "Dịch vụ bàn" => "bg-secondary",
                                                            "Báo cáo" => "bg-danger",
                                                            "Khách hàng" => "bg-dark",
                                                            _ => "bg-light text-dark"
                                                        };

                                                        <span class="badge @badgeClass me-1 mb-1" 
                                                              title="@string.Join(", ", category.Value.Select(p => p.PermissionDisplayName))">
                                                            @category.Key (@category.Value.Count)
                                                        </span>
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Chưa có quyền</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <button class="btn btn-sm btn-outline-primary" 
                                                        onclick="openGrantPermissionModal(@employee.EmployeeId, '@employee.FullName')">
                                                    <i class="bi bi-gear me-1"></i>Phân quyền
                                                </button>
                                                <button class="btn btn-sm btn-outline-info" 
                                                        onclick="viewEmployeePermissions(@employee.EmployeeId, '@employee.FullName')">
                                                    <i class="bi bi-eye me-1"></i>Xem
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger" 
                                                        onclick="revokeAllPermissions(@employee.EmployeeId, '@employee.FullName')">
                                                    <i class="bi bi-x-circle me-1"></i>Thu hồi
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Permissions List Tab -->
        <div class="tab-pane fade" id="permissions-content" role="tabpanel">
            <div class="card mt-3">
                <div class="card-header">
                    <h5 class="mb-0">Danh sách tất cả quyền trong hệ thống</h5>
                </div>
                <div class="card-body">
                    @foreach (var category in Model.PermissionsByCategory)
                    {
                        var categoryIcon = category.Key switch
                        {
                            "Quản lý bàn" => "bi-table",
                            "Quản lý sản phẩm" => "bi-box-seam",
                            "Đặt bàn" => "bi-calendar-check",
                            "Phiên chơi" => "bi-play-circle",
                            "Dịch vụ bàn" => "bi-cup-hot",
                            "Báo cáo" => "bi-graph-up",
                            "Khách hàng" => "bi-people",
                            _ => "bi-shield-check"
                        };

                        <div class="permission-category mb-4">
                            <h6 class="category-title">
                                <i class="@categoryIcon me-2"></i>@category.Key (@category.Value.Count quyền)
                            </h6>
                            <div class="row">
                                @foreach (var permission in category.Value)
                                {
                                    <div class="col-md-6 col-lg-4 mb-3">
                                        <div class="card permission-card">
                                            <div class="card-body">
                                                <h6 class="card-title">@permission.DisplayName</h6>
                                                <p class="card-text small text-muted">@permission.Description</p>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <small class="text-muted">@permission.PermissionName</small>
                                                    <span class="badge @(permission.IsActive ? "bg-success" : "bg-secondary")">
                                                        @(permission.IsActive ? "Hoạt động" : "Tạm dừng")
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Permission Templates Tab -->
        <div class="tab-pane fade" id="templates-content" role="tabpanel">
            <div class="card mt-3">
                <div class="card-header">
                    <h5 class="mb-0">Mẫu phân quyền theo vị trí</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <!-- Cashier Template -->
                        <div class="col-md-6 mb-4">
                            <div class="card border-success">
                                <div class="card-header bg-success text-white">
                                    <h6 class="mb-0">
                                        <i class="bi bi-cash-stack me-2"></i>Mẫu Thu ngân
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <p class="text-muted">Quyền cơ bản cho thu ngân</p>
                                    <div class="permission-list">
                                        <span class="badge bg-primary me-1 mb-1">Xem thông tin bàn</span>
                                        <span class="badge bg-success me-1 mb-1">Xem báo cáo doanh thu</span>
                                        <span class="badge bg-info me-1 mb-1">Xem đặt bàn</span>
                                        <span class="badge bg-warning me-1 mb-1">Xem sản phẩm</span>
                                        <span class="badge bg-danger me-1 mb-1">Xử lý thanh toán</span>
                                        <span class="badge bg-purple me-1 mb-1" style="background-color: #6f42c1 !important;">Chuyển bàn</span>
                                    </div>
                                    <button class="btn btn-success mt-3" onclick="applyTemplate('CASHIER')">
                                        <i class="bi bi-download me-1"></i>Áp dụng mẫu
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Server Template -->
                        <div class="col-md-6 mb-4">
                            <div class="card border-warning">
                                <div class="card-header bg-warning text-dark">
                                    <h6 class="mb-0">
                                        <i class="bi bi-person-badge me-2"></i>Mẫu Phục vụ
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <p class="text-muted">Quyền cơ bản cho nhân viên phục vụ</p>
                                    <div class="permission-list">
                                        <span class="badge bg-primary me-1 mb-1">Xem thông tin bàn</span>
                                        <span class="badge bg-info me-1 mb-1">Tạo đặt bàn</span>
                                        <span class="badge bg-success me-1 mb-1">Bắt đầu phiên</span>
                                        <span class="badge bg-secondary me-1 mb-1">Quản lý đơn hàng</span>
                                        <span class="badge bg-warning me-1 mb-1">Xem sản phẩm</span>
                                        <span class="badge bg-danger me-1 mb-1">Xử lý thanh toán</span>
                                        <span class="badge bg-purple me-1 mb-1" style="background-color: #6f42c1 !important;">Chuyển bàn</span>
                                    </div>
                                    <button class="btn btn-warning" onclick="applyTemplate('SERVING')">
                                        <i class="bi bi-download me-1"></i>Áp dụng mẫu
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Grant Permission Modal -->
<div class="modal fade" id="grantPermissionModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-shield-check me-2"></i>Phân quyền cho: <span id="selectedEmployeeName"></span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="selectedEmployeeId">
                
                <!-- Quick Actions -->
                <div class="alert alert-info">
                    <h6><i class="bi bi-lightbulb me-2"></i>Hành động nhanh:</h6>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="selectAllPermissions()">
                            <i class="bi bi-check-all me-1"></i>Chọn tất cả
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="clearAllPermissions()">
                            <i class="bi bi-x-square me-1"></i>Bỏ chọn tất cả
                        </button>
                        <button type="button" class="btn btn-outline-success btn-sm" onclick="applyEmployeeTemplate('CASHIER')">
                            <i class="bi bi-cash-stack me-1"></i>Mẫu Thu ngân
                        </button>
                        <button type="button" class="btn btn-outline-warning btn-sm" onclick="applyEmployeeTemplate('SERVING')">
                            <i class="bi bi-person-badge me-1"></i>Mẫu Phục vụ
                        </button>
                    </div>
                </div>

                <div class="permissions-grid">
                    @foreach (var category in Model.PermissionsByCategory)
                    {
                        <div class="permission-category-modal mb-4">
                            <div class="category-header">
                                <h6 class="mb-3">
                                    <input type="checkbox" class="form-check-input category-checkbox me-2" 
                                           data-category="@category.Key" onchange="toggleCategoryPermissions(this)">
                                    <span class="category-title">@category.Key</span>
                                    <span class="badge bg-secondary ms-2">@category.Value.Count</span>
                                </h6>
                            </div>
                            <div class="row">
                                @foreach (var permission in category.Value)
                                {
                                    <div class="col-md-6 mb-2">
                                        <div class="permission-card">
                                            <div class="form-check">
                                                <input class="form-check-input permission-checkbox" 
                                                       type="checkbox" 
                                                       value="@permission.PermissionId" 
                                                       id="perm_@permission.PermissionId"
                                                       data-category="@category.Key">
                                                <label class="form-check-label w-100" for="perm_@permission.PermissionId">
                                                    <div class="permission-info">
                                                        <strong>@permission.DisplayName</strong>
                                                        @if (!string.IsNullOrEmpty(permission.Description))
                                                        {
                                                            <small class="text-muted d-block">@permission.Description</small>
                                                        }
                                                    </div>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>Hủy
                </button>
                <button type="button" class="btn btn-primary" onclick="savePermissions()">
                    <i class="bi bi-check-circle me-1"></i>Lưu quyền
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Batch Permission Modal -->
<div class="modal fade" id="batchPermissionModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-people me-2"></i>Phân quyền nhóm
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    <strong>Lưu ý:</strong> Việc phân quyền nhóm sẽ ghi đè lên các quyền hiện tại của nhân viên được chọn.
                </div>
                
                <div class="mb-3">
                    <label class="form-label">Chọn nhân viên:</label>
                    <div id="batchEmployeeList" class="border rounded p-3" style="max-height: 200px; overflow-y: auto;">
                        @foreach (var employee in Model.Employees)
                        {
                            <div class="form-check">
                                <input class="form-check-input batch-employee-checkbox" type="checkbox" 
                                       value="@employee.EmployeeId" id="batch_emp_@employee.EmployeeId">
                                <label class="form-check-label" for="batch_emp_@employee.EmployeeId">
                                    @employee.FullName (@(employee.Position == "CASHIER" ? "Thu ngân" : "Phục vụ"))
                                </label>
                            </div>
                        }
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label">Chọn mẫu quyền:</label>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card border-success template-card" data-template="CASHIER">
                                <div class="card-body text-center">
                                    <i class="bi bi-cash-stack fs-3 text-success"></i>
                                    <h6 class="mt-2">Mẫu Thu ngân</h6>
                                    <small class="text-muted">Quyền cơ bản cho thu ngân</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card border-warning template-card" data-template="SERVING">
                                <div class="card-body text-center">
                                    <i class="bi bi-person-badge fs-3 text-warning"></i>
                                    <h6 class="mt-2">Mẫu Phục vụ</h6>
                                    <small class="text-muted">Quyền cơ bản cho phục vụ</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" onclick="applyBatchPermissions()">
                    <i class="bi bi-people me-1"></i>Áp dụng cho nhóm
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Employee Permissions View Modal -->
<div class="modal fade" id="viewPermissionsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-eye me-2"></i>Quyền của: <span id="viewEmployeeName"></span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="viewPermissionsContent">
                <!-- Content will be loaded dynamically -->
            </div>
        </div>
    </div>
</div>

<style>
.permission-card {
    border: 1px solid #e9ecef;
    border-radius: 0.375rem;
    padding: 0.75rem;
    transition: all 0.2s;
}

.permission-card:hover {
    border-color: #0d6efd;
    background-color: #f8f9fa;
}

.permission-card.selected {
    border-color: #198754;
    background-color: #d1e7dd;
}

.permission-badges .badge {
    font-size: 0.75em;
}

.category-title {
    font-weight: 600;
    color: #495057;
}

.template-card {
    cursor: pointer;
    transition: all 0.2s;
}

.template-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.template-card.selected {
    border-width: 2px;
    background-color: #f8f9fa;
}

.permission-category-modal {
    border-left: 4px solid #0d6efd;
    padding-left: 1rem;
}

#employeeSearch {
    background-color: #f8f9fa;
}

.table th {
    border-top: none;
    font-weight: 600;
}

.btn-group .btn {
    border-radius: 0.375rem !important;
    margin-right: 0.25rem;
}
</style>

@section Scripts {
    <script>
        let selectedTemplate = null;

        // Initialize page
        $(document).ready(function() {
            // Employee search functionality
            $('#employeeSearch').on('keyup', function() {
                const searchValue = $(this).val().toLowerCase();
                $('#employeeTable tbody tr').each(function() {
                    const employeeName = $(this).find('strong').text().toLowerCase();
                    const position = $(this).find('.badge').text().toLowerCase();
                    const isVisible = employeeName.includes(searchValue) || position.includes(searchValue);
                    $(this).toggle(isVisible);
                });
            });

            // Select all employees functionality
            $('#selectAllEmployees').change(function() {
                $('.employee-checkbox').prop('checked', this.checked);
            });

            // Template card selection
            $('.template-card').click(function() {
                $('.template-card').removeClass('selected');
                $(this).addClass('selected');
                selectedTemplate = $(this).data('template');
            });
        });

        function openGrantPermissionModal(employeeId = null, employeeName = '') {
            if (employeeId) {
                document.getElementById('selectedEmployeeId').value = employeeId;
                document.getElementById('selectedEmployeeName').textContent = employeeName;
                
                // Reset all checkboxes
                document.querySelectorAll('.permission-checkbox').forEach(checkbox => {
                    checkbox.checked = false;
                    checkbox.disabled = false;
                    const card = checkbox.closest('.permission-card');
                    if (card) card.classList.remove('selected');
                });
                
                // Reset category checkboxes
                document.querySelectorAll('.category-checkbox').forEach(checkbox => {
                    checkbox.checked = false;
                    checkbox.indeterminate = false;
                });
                
                // Load and display current permissions
                loadEmployeePermissions(employeeId);
            } else {
                document.getElementById('selectedEmployeeId').value = '';
                document.getElementById('selectedEmployeeName').textContent = 'Chọn nhân viên';
            }
            
            new bootstrap.Modal(document.getElementById('grantPermissionModal')).show();
        }

        function loadEmployeePermissions(employeeId) {
            $.get('@Url.Action("GetEmployeePermissions")', { employeeId: employeeId })
                .done(function(permissions) {
                    // Check the permissions
                    permissions.forEach(permission => {
                        const checkbox = document.getElementById(`perm_${permission.permissionId}`);
                        if (checkbox) {
                            checkbox.checked = true;
                            const card = checkbox.closest('.permission-card');
                            if (card) card.classList.add('selected');
                        }
                    });
                    
                    // Update category checkboxes
                    updateCategoryCheckboxes();
                })
                .fail(function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Không thể tải thông tin quyền'
                    });
                });
        }

        function updateCategoryCheckboxes() {
            document.querySelectorAll('.category-checkbox').forEach(categoryCheckbox => {
                const category = categoryCheckbox.dataset.category;
                const permissionCheckboxes = document.querySelectorAll(`.permission-checkbox[data-category="${category}"]`);
                const checkedCount = Array.from(permissionCheckboxes).filter(cb => cb.checked).length;
                
                if (checkedCount === 0) {
                    categoryCheckbox.checked = false;
                    categoryCheckbox.indeterminate = false;
                } else if (checkedCount === permissionCheckboxes.length) {
                    categoryCheckbox.checked = true;
                    categoryCheckbox.indeterminate = false;
                } else {
                    categoryCheckbox.checked = false;
                    categoryCheckbox.indeterminate = true;
                }
            });
        }

        function toggleCategoryPermissions(categoryCheckbox) {
            const category = categoryCheckbox.dataset.category;
            const permissionCheckboxes = document.querySelectorAll(`.permission-checkbox[data-category="${category}"]`);
            
            permissionCheckboxes.forEach(checkbox => {
                checkbox.checked = categoryCheckbox.checked;
                const card = checkbox.closest('.permission-card');
                if (card) {
                    if (categoryCheckbox.checked) {
                        card.classList.add('selected');
                    } else {
                        card.classList.remove('selected');
                    }
                }
            });
        }

        // Update category checkbox when individual permission is changed
        $(document).on('change', '.permission-checkbox', function() {
            const card = this.closest('.permission-card');
            if (card) {
                if (this.checked) {
                    card.classList.add('selected');
                } else {
                    card.classList.remove('selected');
                }
            }
            updateCategoryCheckboxes();
        });

        function selectAllPermissions() {
            document.querySelectorAll('.permission-checkbox').forEach(checkbox => {
                checkbox.checked = true;
                const card = checkbox.closest('.permission-card');
                if (card) card.classList.add('selected');
            });
            updateCategoryCheckboxes();
        }

        function clearAllPermissions() {
            document.querySelectorAll('.permission-checkbox').forEach(checkbox => {
                checkbox.checked = false;
                const card = checkbox.closest('.permission-card');
                if (card) card.classList.remove('selected');
            });
            updateCategoryCheckboxes();
        }

        function applyEmployeeTemplate(templateType) {
            clearAllPermissions();
            
            // Load template permissions dynamically
            $.get('@Url.Action("GetTemplatePermissions")', { templateType: templateType })
                .done(function(response) {
                    if (response.success) {
                        response.data.forEach(permission => {
                            const checkbox = document.getElementById(`perm_${permission.permissionId}`);
                            if (checkbox) {
                                checkbox.checked = true;
                                const card = checkbox.closest('.permission-card');
                                if (card) card.classList.add('selected');
                            }
                        });
                        updateCategoryCheckboxes();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: response.message
                        });
                    }
                })
                .fail(function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi hệ thống',
                        text: 'Không thể tải mẫu quyền'
                    });
                });
        }

        function getTemplatePermissions(templateType) {
            const templates = {
                'CASHIER': ['TABLE_VIEW', 'REVENUE_VIEW', 'BOOKING_VIEW', 'PRODUCT_VIEW'],
                'SERVING': ['TABLE_VIEW', 'BOOKING_CREATE', 'SESSION_START', 'ORDER_MANAGE', 'PRODUCT_VIEW']
            };
            return templates[templateType] || [];
        }

        function savePermissions() {
            const employeeId = document.getElementById('selectedEmployeeId').value;
            if (!employeeId) {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: 'Vui lòng chọn nhân viên'
                });
                return;
            }

            const selectedPermissions = [];
            document.querySelectorAll('.permission-checkbox:checked').forEach(checkbox => {
                selectedPermissions.push(parseInt(checkbox.value));
            });

            const btn = event.target;
            const originalText = btn.innerHTML;
            btn.innerHTML = '<i class="spinner-border spinner-border-sm me-1"></i>Đang lưu...';
            btn.disabled = true;

            $.post('@Url.Action("GrantPermissions")', {
                employeeId: employeeId,
                permissionIds: selectedPermissions
            })
            .done(function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành công',
                        text: response.message,
                        timer: 2000,
                        showConfirmButton: false
                    });
                    
                    $('#grantPermissionModal').modal('hide');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: response.message
                    });
                }
            })
            .fail(function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi hệ thống',
                    text: 'Có lỗi xảy ra khi lưu quyền'
                });
            })
            .always(function() {
                btn.innerHTML = originalText;
                btn.disabled = false;
            });
        }

        function showBatchPermissionModal() {
            selectedTemplate = null;
            $('.template-card').removeClass('selected');
            $('.batch-employee-checkbox').prop('checked', false);
            $('#batchPermissionModal').modal('show');
        }

        function applyBatchPermissions() {
            const selectedEmployees = [];
            $('.batch-employee-checkbox:checked').each(function() {
                selectedEmployees.push(parseInt($(this).val()));
            });

            if (selectedEmployees.length === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Cảnh báo',
                    text: 'Vui lòng chọn ít nhất một nhân viên'
                });
                return;
            }

            if (!selectedTemplate) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Cảnh báo',
                    text: 'Vui lòng chọn mẫu quyền'
                });
                return;
            }

            Swal.fire({
                title: 'Xác nhận phân quyền nhóm',
                text: `Bạn có chắc muốn áp dụng mẫu ${selectedTemplate} cho ${selectedEmployees.length} nhân viên?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Xác nhận',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    processBatchPermissions(selectedEmployees, selectedTemplate);
                }
            });
        }

        function processBatchPermissions(employeeIds, template) {
            $.post('@Url.Action("ApplyBatchPermissions")', {
                employeeIds: employeeIds,
                templateType: template
            })
            .done(function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Hoàn thành',
                        text: response.message,
                        timer: 3000,
                        showConfirmButton: false
                    });
                    $('#batchPermissionModal').modal('hide');
                    setTimeout(() => location.reload(), 2000);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: response.message
                    });
                }
            })
            .fail(function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi hệ thống',
                    text: 'Có lỗi xảy ra trong quá trình phân quyền'
                });
            });
        }

        function getTemplatePermissionIds(templateType) {
            // This will be loaded dynamically from the server
            return [];
        }

        function viewEmployeePermissions(employeeId, employeeName) {
            $('#viewEmployeeName').text(employeeName);
            
            $.get('@Url.Action("GetEmployeePermissions")', { employeeId: employeeId })
                .done(function(permissions) {
                    let content = '';
                    if (permissions.length === 0) {
                        content = '<div class="text-center text-muted py-4"><i class="bi bi-info-circle fs-3 mb-2 d-block"></i>Nhân viên này chưa được cấp quyền nào</div>';
                    } else {
                        const groupedPermissions = {};
                        permissions.forEach(p => {
                            if (!groupedPermissions[p.category]) {
                                groupedPermissions[p.category] = [];
                            }
                            groupedPermissions[p.category].push(p);
                        });

                        Object.keys(groupedPermissions).forEach(category => {
                            content += `<div class="mb-4">
                                <h6 class="border-bottom pb-2">${category}</h6>
                                <div class="row">`;
                            
                            groupedPermissions[category].forEach(permission => {
                                content += `<div class="col-md-6 mb-2">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-check-circle text-success me-2"></i>
                                        <span>${permission.displayName}</span>
                                    </div>
                                </div>`;
                            });
                            
                            content += '</div></div>';
                        });
                    }
                    
                    $('#viewPermissionsContent').html(content);
                    $('#viewPermissionsModal').modal('show');
                })
                .fail(function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Không thể tải thông tin quyền'
                    });
                });
        }

        function revokeAllPermissions(employeeId, employeeName) {
            Swal.fire({
                title: 'Xác nhận thu hồi quyền',
                text: `Bạn có chắc muốn thu hồi tất cả quyền của nhân viên ${employeeName}?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                confirmButtonText: 'Thu hồi',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("GrantPermissions")', {
                        employeeId: employeeId,
                        permissionIds: []
                    })
                    .done(function(response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công',
                                text: response.message,
                                timer: 2000
                            });
                            setTimeout(() => location.reload(), 1500);
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: response.message
                            });
                        }
                    })
                    .fail(function() {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi hệ thống',
                            text: 'Có lỗi xảy ra khi thu hồi quyền'
                        });
                    });
                }
            });
        }

        function initializePermissions() {
            Swal.fire({
                title: 'Khởi tạo quyền hệ thống',
                text: 'Bạn có chắc muốn khởi tạo các quyền mặc định cho hệ thống?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Khởi tạo',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("InitializePermissions")')
                        .done(function(response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Thành công',
                                    text: response.message,
                                    timer: 2000
                                });
                                setTimeout(() => location.reload(), 1500);
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi',
                                    text: response.message
                                });
                            }
                        })
                        .fail(function() {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi hệ thống',
                                text: 'Có lỗi xảy ra khi khởi tạo quyền'
                            });
                        });
                }
            });
        }
    </script>
} 